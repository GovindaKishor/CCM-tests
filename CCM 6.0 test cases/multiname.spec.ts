// Description and Name are in system language.

import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('http://ccm-test.imtf-devops.com:8181/auth/login');
  await page.getByRole('textbox').nth(0).fill('SUPERUSER');
  await page.getByRole('textbox').nth(1).fill('SUPERUSER');
  await page.getByRole('button').nth(2).click();
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('button').nth(3).click();
  await page.getByRole('option').nth(2).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('tab', { name: 'Cases', exact: true }).click();
  await expect(page.getByText('Id', { exact: true })).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Case type')).toHaveCount(1);
  await expect(page.getByText('Case status')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Main Client Id')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Origin')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Customer type')).toHaveCount(1);
  await expect(page.getByText('Name', { exact: true })).toHaveCount(1);
  await expect(page.getByText('Classifications')).toHaveCount(1);
  await expect(page.getByText('Case creation date')).toHaveCount(1);
  await expect(page.getByText('Elapsed Time')).toHaveCount(1);
  await expect(page.getByText('Scenario Names')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Qualification Task Status')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Hit Id')).toHaveCount(1);
  await page.locator('.css-mslw24').first().click();
  await page.getByRole('button', { name: 'AML Alerts' }).click();
  await page.getByRole('button', { name: 'Details anzeigen' }).click();
  await expect(page.locator('text=Alert-Details')).toHaveCount(1);
  await expect(page.getByRole('button', { name: 'siron.ScenarioDescription.14.value Score : 10 Auslöder : 2 Transaktionen' })).toHaveCount(1);
  await page.getByRole('button', { name: 'Schliessen' }).click();
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('button').nth(3).click();
  await page.getByRole('option').nth(3).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('button', { name: 'Afficher les détails' }).click();
  await expect(page.locator('text=Détails de l\'alerte')).toHaveCount(1);
  await expect(page.getByRole('button', { name: 'Transactions avec les parties liées Score : 10 Déclencher : 2 transactions' })).toHaveCount(1);
  await page.getByRole('button', { name: 'Fermer' }).click();
  await expect(page.getByText('Id', { exact: true })).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Type de cas')).toHaveCount(1);
  await expect(page.getByText('Statut du cas')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Id du client principal')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Origine')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Type de client')).toHaveCount(1);
  await expect(page.getByText('Nom', { exact: true })).toHaveCount(1);
  await expect(page.getByText('Classifications')).toHaveCount(2);
  await expect(page.getByText('Date de création du cas')).toHaveCount(1);
  await expect(page.getByText('Temps écoulé')).toHaveCount(1);
  await expect(page.getByText('Noms des scénarios')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Qualification du statut de la tâche')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Id du Hit')).toHaveCount(1);
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('button').nth(3).click();
  await page.getByRole('option').nth(4).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('button', { name: 'Visualizza dettagli' }).click();
  await expect(page.locator('text=Dettagli dell\'allerta')).toHaveCount(1);
  await expect(page.getByRole('button', { name: 'siron.ScenarioDescription.14.value Punteggio : 10 Trigger : 2 transazioni.' })).toHaveCount(1);
  await page.getByRole('button', { name: 'Chiudi' }).click();
  await expect(page.getByText('Id', { exact: true })).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Case type')).toHaveCount(1);
  await expect(page.getByText('Case status')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Main Client Id')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Origin')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Customer type')).toHaveCount(1);
  await expect(page.getByText('Name', { exact: true })).toHaveCount(1);
  await expect(page.getByText('Classifications')).toHaveCount(1);
  await expect(page.getByText('Case creation date')).toHaveCount(1);
  await expect(page.getByText('Elapsed Time')).toHaveCount(1);
  await expect(page.getByText('Scenario Names')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Qualification Task Status')).toHaveCount(1);
  await expect(page.locator('[data-test-id="virtuoso-top-item-list"]').getByText('Hit Id')).toHaveCount(1);
});