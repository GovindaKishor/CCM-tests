//Add a property “commentType” to the comments to be distinguish the kind of comment.

import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/');
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/auth');
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/auth/login');
  await page.getByRole('textbox').nth(0).fill('SUPERUSER');
  await page.getByRole('textbox').nth(1).fill('SUPERUSER');
  await page.getByRole('button').nth(2).click();
  await page.getByRole('link').nth(3).click();
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/workbench/');
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/workbench/auth');
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/workbench');
  await page.goto('http://ccm-ci-develop.imtf-devops.com:8181/workbench/configs');
  await page.locator('button').nth(-1).click();
  await page.getByRole('textbox').nth(0).fill('Automation Testing');
  await page.getByRole('radio').nth(0).check();
  await page.getByRole('button').nth(0).click();
  await page.getByRole('option').nth(0).click();
  await page.getByRole('button').nth(3).click();
  await page.getByRole('button').nth(15).click();
  await page.getByRole('textbox').nth(0).fill('Automation Testing');
  await page.getByRole('button').nth(1).click();
  await expect(page.locator('text=SUPERUSER has commented')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Automation Testing' })).toHaveCount(1);
  await page.getByRole('button').nth(8).click();
  await page.getByRole('textbox').nth(0).fill('Please approve');
  await page.getByRole('button').nth(1).click();
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('textbox').nth(0).fill('SUPERUSER2');
  await page.getByRole('textbox').nth(1).fill('SUPERUSER2');
  await page.getByRole('button').nth(2).click();
  await page.getByRole('link').nth(3).click();
  await page.getByRole('row', { name: 'Automation Testing' }).getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(0).click();
  await page.getByRole('textbox').nth(0).fill('Approved');
  await page.getByRole('button').nth(1).click();
  await page.getByRole('row', { name: 'Automation Testing' }).click();
  await expect(page.locator('text=SUPERUSER has sent a publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Please approve' })).toHaveCount(1);
  await expect(page.locator('text=SUPERUSER2 has approved the publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Approved' })).toHaveCount(1);
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('textbox').nth(0).fill('SUPERUSER');
  await page.getByRole('textbox').nth(1).fill('SUPERUSER');
  await page.getByRole('button').nth(2).click();
  await page.getByRole('link').nth(3).click();
  await page.getByRole('row', { name: 'Automation Testing' }).click();
  await expect(page.locator('text=SUPERUSER2 has approved the publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Approved' })).toHaveCount(1);
  await expect(page.locator('text=SUPERUSER has sent a publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Please approve' })).toHaveCount(1);
  await page.getByRole('link').nth(3).click();
  await page.locator('button').nth(-1).click();
  await page.getByRole('textbox').nth(0).fill('Automation-Testing');
  await page.getByRole('radio').nth(0).check();
  await page.getByRole('button').nth(0).click();
  await page.getByRole('option').nth(0).click();
  await page.getByRole('button').nth(3).click();
  await page.getByRole('button').nth(8).click();
  await page.getByRole('textbox').nth(0).fill('Please approve');
  await page.getByRole('button').nth(1).click();
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('textbox').nth(0).fill('SUPERUSER2');
  await page.getByRole('textbox').nth(1).fill('SUPERUSER2');
  await page.getByRole('button').nth(2).click();
  await page.getByRole('link').nth(3).click();
  await page.getByRole('row', { name: 'Automation-Testing' }).getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('textbox').nth(0).fill('Reject');
  await page.getByRole('button').nth(1).click();
  await page.getByRole('cell', { name: 'Automation-Testing' }).click();
  await expect(page.locator('text=SUPERUSER2 has rejected the publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Reject' })).toHaveCount(1);
  await expect(page.locator('text=SUPERUSER has sent a publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Please approve' })).toHaveCount(1);
  await page.getByRole('button').nth(0).click();
  await page.getByRole('menuitem').nth(1).click();
  await page.getByRole('link').nth(0).click();
  await page.getByRole('textbox').nth(0).fill('SUPERUSER');
  await page.getByRole('textbox').nth(1).fill('SUPERUSER');
  await page.getByRole('button').nth(2).click();
  await page.getByRole('link').nth(3).click();
  await page.getByRole('cell', { name: 'Automation-Testing' }).click();
  await expect(page.locator('text=SUPERUSER2 has rejected the publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Reject' })).toHaveCount(1);
  await expect(page.locator('text=SUPERUSER has sent a publish request')).toHaveCount(1);
  await expect(page.getByRole('paragraph').filter({ hasText: 'Please approve' })).toHaveCount(1);
});